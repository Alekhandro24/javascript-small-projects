{"mappings":"AAAA,MAAMA,QAAU,IACVC,aAAe,SAEfC,qBAAuB,CAC3B,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAGHC,aAAeC,SAASC,iBAAiB,eACzCC,MAAQF,SAASG,eAAe,SAChCC,sBAAwBJ,SAASG,eAAe,kBAChDE,0BAA4BL,SAASM,cACzC,+BAEIC,cAAgBP,SAASG,eAAe,iBAE9C,IAAIK,WAMJ,SAASC,YACPD,YAAa,EACbT,aAAaW,SAAQC,IACnBA,EAAKC,UAAUC,OAAOjB,SACtBe,EAAKC,UAAUC,OAAOhB,cACtBc,EAAKG,oBAAoB,QAASC,aAClCJ,EAAKK,iBAAiB,QAASD,YAAa,CAAEE,MAAM,GAAK,IAE3DC,qBACAd,sBAAsBQ,UAAUC,OAAO,OACzC,CAEA,SAASE,YAAYI,GAKnB,MAAMR,EAAOQ,EAAEC,OACTC,EAAeb,WAAaX,aAAeD,QACjD0B,UAAUX,EAAMU,GACZE,SAASF,GACXG,SAAQ,GACCC,SACTD,SAAQ,IAERE,YACAR,qBAEJ,CAEA,SAASM,QAAQG,GAEbtB,0BAA0BuB,UADxBD,EACoC,SAEGnB,WAAa,MAAQ,OAAxB,SAExCJ,sBAAsBQ,UAAUiB,IAAI,OACtC,CAEA,SAASJ,SACP,MAAO,IAAI1B,cAAc+B,OAAMnB,GAE3BA,EAAKC,UAAUmB,SAASnC,UAAYe,EAAKC,UAAUmB,SAASlC,eAGlE,CAEA,SAASyB,UAAUX,EAAMU,GACvBV,EAAKC,UAAUiB,IAAIR,EACrB,CAEA,SAASK,YACPlB,YAAcA,UAChB,CAEA,SAASU,qBACPhB,MAAMU,UAAUC,OAAOjB,SACvBM,MAAMU,UAAUC,OAAOhB,cACnBW,WACFN,MAAMU,UAAUiB,IAAIhC,cAEpBK,MAAMU,UAAUiB,IAAIjC,QAExB,CAEA,SAAS2B,SAASF,GAChB,OAAOvB,qBAAqBkC,MAAKC,GACxBA,EAAYH,OAAMI,GAChBnC,aAAamC,GAAOtB,UAAUmB,SAASV,MAGpD,CA3EAZ,YAEAF,cAAcS,iBAAiB,QAASP","sources":["src/js/26-tic-tac-toe2.js"],"sourcesContent":["const X_CLASS = 'x';\nconst CIRCLE_CLASS = 'circle';\n\nconst WINNING_COMBINATIONS = [\n  [0, 1, 2],\n  [3, 4, 5],\n  [6, 7, 8],\n  [0, 3, 6],\n  [1, 4, 7],\n  [2, 5, 8],\n  [0, 4, 8],\n  [2, 4, 6],\n];\n\nconst cellElements = document.querySelectorAll('[data-cell]');\nconst board = document.getElementById('board');\nconst winningMessageElement = document.getElementById('winningMessage');\nconst winningMessageTextElement = document.querySelector(\n  '[data-winning-message-text]'\n);\nconst restartButton = document.getElementById('restartButton');\n\nlet circleTurn;\n\nstartGame();\n\nrestartButton.addEventListener('click', startGame);\n\nfunction startGame() {\n  circleTurn = false;\n  cellElements.forEach(cell => {\n    cell.classList.remove(X_CLASS);\n    cell.classList.remove(CIRCLE_CLASS);\n    cell.removeEventListener('click', handleClick);\n    cell.addEventListener('click', handleClick, { once: true });\n  });\n  setBoardHoverClass();\n  winningMessageElement.classList.remove('show');\n}\n\nfunction handleClick(e) {\n  //placeMark\n  //check for win\n  //check for draw\n  //switch turns\n  const cell = e.target;\n  const currentClass = circleTurn ? CIRCLE_CLASS : X_CLASS;\n  placeMark(cell, currentClass);\n  if (checkWin(currentClass)) {\n    endGame(false);\n  } else if (isDraw()) {\n    endGame(true);\n  } else {\n    swapTurns();\n    setBoardHoverClass();\n  }\n}\n\nfunction endGame(draw) {\n  if (draw) {\n    winningMessageTextElement.innerText = 'Draw!';\n  } else {\n    winningMessageTextElement.innerText = `${circleTurn ? \"O's\" : \"X's\"} Wins!`;\n  }\n  winningMessageElement.classList.add('show');\n}\n\nfunction isDraw() {\n  return [...cellElements].every(cell => {\n    return (\n      cell.classList.contains(X_CLASS) || cell.classList.contains(CIRCLE_CLASS)\n    );\n  });\n}\n\nfunction placeMark(cell, currentClass) {\n  cell.classList.add(currentClass);\n}\n\nfunction swapTurns() {\n  circleTurn = !circleTurn;\n}\n\nfunction setBoardHoverClass() {\n  board.classList.remove(X_CLASS);\n  board.classList.remove(CIRCLE_CLASS);\n  if (circleTurn) {\n    board.classList.add(CIRCLE_CLASS);\n  } else {\n    board.classList.add(X_CLASS);\n  }\n}\n\nfunction checkWin(currentClass) {\n  return WINNING_COMBINATIONS.some(combination => {\n    return combination.every(index => {\n      return cellElements[index].classList.contains(currentClass);\n    });\n  });\n}\n"],"names":["X_CLASS","CIRCLE_CLASS","WINNING_COMBINATIONS","cellElements","document","querySelectorAll","board","getElementById","winningMessageElement","winningMessageTextElement","querySelector","restartButton","circleTurn","startGame","forEach","cell","classList","remove","removeEventListener","handleClick","addEventListener","once","setBoardHoverClass","e","target","currentClass","placeMark","checkWin","endGame","isDraw","swapTurns","draw","innerText","add","every","contains","some","combination","index"],"version":3,"file":"26-tic-tac-toe2.27db6640.js.map"}