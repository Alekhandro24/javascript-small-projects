{"mappings":"AAAA,MAAMA,WAAaC,SAASC,cAAc,aACpCC,kBAAoBF,SAASC,cAAc,qBAC3CE,wBAA0BH,SAASC,cACvC,4BAIFG,OAAOC,OAAS,KACd,IAAKC,UAAUC,aAEb,OADAC,MAAM,oDACC,CACT,EAIFF,UAAUC,aAAaE,MAAKC,IAC1B,SAASC,KAgBT,WAEE,GAAID,EAAQE,SACVb,WAAWc,UAAUC,IAAI,UACzBX,wBAAwBY,UAAY,mBAKpC,GAHAhB,WAAWc,UAAUG,OAAO,UAGxBC,SAASP,EAAQQ,iBAAkB,CACrC,IAAIC,EAAKF,SAASP,EAAQQ,gBAAkB,MACxCE,EAAMH,SAASP,EAAQQ,gBAAkB,GAAU,GAALC,GAClDhB,wBAAwBkB,UAAY,uDAC3BF,OAAQC,WACnB,CAEJ,CA/BEE,GAkCF,WACE,IAAIC,EAAkB,GAAGN,SAAyB,IAAhBP,EAAQc,UAC1CzB,WAAW0B,MAAMC,MAAQH,EACzBrB,kBAAkByB,YAAcJ,CAClC,CArCEK,EACF,CACAjB,IAGAD,EAAQmB,iBAAiB,kBAAkB,KACzClB,GAAA,IAIFD,EAAQmB,iBAAiB,eAAe,KACtClB,GAAA,GA0BF","sources":["src/js/12-batteryStatusDetector.js"],"sourcesContent":["const chargingEl = document.querySelector('.charging');\nconst chargingPercentEl = document.querySelector('.charging-percent');\nconst chargingTimeRemainingEl = document.querySelector(\n  '.charging-time-remaining'\n);\n\n//If the browsers don't support battery status API\nwindow.onload = () => {\n  if (!navigator.getBattery()) {\n    alert(\"Your browser doesn't support battery status API\");\n    return false;\n  }\n};\n\n//If the browsers support battery status API\nnavigator.getBattery().then(battery => {\n  function updateAllBatteryInfo() {\n    updateChargingInfo();\n    updateLevelInfo();\n  }\n  updateAllBatteryInfo();\n\n  //If the charging status changes i.e when plugged in or plugged out\n  battery.addEventListener('chargingchange', () => {\n    updateAllBatteryInfo();\n  });\n\n  //If the Battery level Changes i.e when charging percentage changes\n  battery.addEventListener('levelchange', () => {\n    updateAllBatteryInfo();\n  });\n\n  function updateChargingInfo() {\n    // checks whether the battery is plugged in or plugged out\n    if (battery.charging) {\n      chargingEl.classList.add('active');\n      chargingTimeRemainingEl.innerText = 'Charging...';\n    } else {\n      chargingEl.classList.remove('active');\n\n      // Estimated Charging time remaining\n      if (parseInt(battery.dischargingTime)) {\n        let hr = parseInt(battery.dischargingTime / 3600);\n        let min = parseInt(battery.dischargingTime / 60 - hr * 60);\n        chargingTimeRemainingEl.innerHTML = `Estimated charging time remaining :\n            <p>${hr}hr ${min}mins</p>`;\n      }\n    }\n  }\n\n  //Updating battery level\n  function updateLevelInfo() {\n    let chargingPercent = `${parseInt(battery.level * 100)}%`;\n    chargingEl.style.width = chargingPercent;\n    chargingPercentEl.textContent = chargingPercent;\n  }\n});\n"],"names":["chargingEl","document","querySelector","chargingPercentEl","chargingTimeRemainingEl","window","onload","navigator","getBattery","alert","then","battery","updateAllBatteryInfo","charging","classList","add","innerText","remove","parseInt","dischargingTime","hr","min","innerHTML","updateChargingInfo","chargingPercent","level","style","width","textContent","updateLevelInfo","addEventListener"],"version":3,"file":"12-batteryStatusDetector.dd73982d.js.map"}